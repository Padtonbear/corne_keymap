/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <125>;
      flavor = "tap-preferred";
      bindings =
        <&kp>,
        <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    Caps_Lock {
      bindings = <&kp CAPS>;
      key-positions = <17 18>;
    };

    delete {
      bindings = <&kp DEL>;
      key-positions = <10 11>;
    };

    NumPad {
      bindings = <&to 3>;
      key-positions = <7 8>;
    };

    Star {
      bindings = <&kp RS(N8)>;
      key-positions = <3 4>;
    };

    Atl_Enter {
      bindings = <&kp RA(ENTER)>;
      key-positions = <1 2>;
    };

    Ctrl_Atl_Del {
      bindings = <&kp LA(LC(DEL))>;
      key-positions = <35 34>;
    };

    Lshift {
      bindings = <&kp LEFT_SHIFT>;
      key-positions = <4 5>;
    };

    Rshift {
      bindings = <&kp RSHFT>;
      key-positions = <6 7>;
    };

    Copy {
      bindings = <&kp LC(C)>;
      key-positions = <3 2>;
    };

    Paste {
      bindings = <&kp LC(V)>;
      key-positions = <15 14>;
    };

    Undo {
      bindings = <&kp LC(Z)>;
      key-positions = <16 15>;
    };

    Redo {
      bindings = <&kp LC(Y)>;
      key-positions = <28 27>;
    };
  };

  macros {
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
       &kp TAB  &kp Q             &kp W    &hm UP E        &kp R      &kp T      &kp Y  &kp U          &kp I    &kp O          &kp P         &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &hm LEFT_ARROW S  &hm DOWN D  &hm RIGHT F      &kp G      &kp H  &kp J          &kp K    &kp L  &kp SEMICOLON  &hm RIGHT_SHIFT APOS
     &kp LCTRL  &kp Z             &kp X       &kp C        &kp V      &kp B      &kp N  &kp M      &kp COMMA  &kp DOT       &kp FSLH           &hm DEL ESC
                                           &kp LALT        &mo 2  &kp SPACE    &kp RET  &mo 1  &kp RIGHT_GUI
      >;
    };

    raise {
      bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8   &kp N9   &kp N0   &trans
&trans  &trans   &mo 4  &trans  &trans  &trans    &trans  &trans  &trans   &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;
    };

    lower {
      bindings = <
&trans  &kp EXCL    &kp AT       &kp HASH     &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp SLASH
&trans   &kp END  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP     &trans    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&trans    &trans    &trans         &trans       &trans     &trans    &kp UNDER   &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                   &trans       &trans     &trans       &trans     &trans    &trans
      >;
    };

    NumPad {
      bindings = <
&kp TAB  &trans    &trans  &kp UP_ARROW     &trans                &trans                   &trans        &kp KP_N7        &kp KP_N8  &kp KP_N9  &kp SLASH  &kp BACKSPACE
 &trans  &trans  &kp LEFT      &kp DOWN  &kp RIGHT                &trans                   &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_N6  &kp MINUS          &none
 &trans  &trans     &mo 4        &trans     &trans  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS        &kp KP_N1        &kp KP_N2  &kp KP_N3   &kp STAR          &to 0
                                 &trans  &kp COMMA                &trans                   &trans        &kp KP_N0          &kp DOT
      >;
    };

    Function {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0    &bt BT_SEL 3  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1    &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 2      &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans        &trans          &trans  &trans  &trans
      >;
    };
  };
};
