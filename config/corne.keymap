/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <125>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    mo_to: mo_to {
      compatible = "zmk,behavior-hold-tap";
      label = "MO_TO";
      #binding-cells = <2>;
      tapping-term-ms = <200>;
      quick-tap-ms = <125>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&to>;
    };
  };

  combos {
    compatible = "zmk,combos";

    delete {
      bindings = <&kp DEL>;
      key-positions = <10 11>;
    };

    Star {
      bindings = <&kp RS(N8)>;
      key-positions = <3 4>;
    };

    Ctrl_Atl_Del {
      bindings = <&kp LA(LC(DEL))>;
      key-positions = <35 34>;
    };

    Copy {
      bindings = <&kp LC(C)>;
      key-positions = <3 2>;
    };

    Paste {
      bindings = <&kp LC(V)>;
      key-positions = <15 14>;
    };

    WIN_V {
      bindings = <&kp LG(V)>;
      key-positions = <25 26>;
    };

    excel_downrows {
      bindings = <&kp LS(LC(DOWN_ARROW))>;
      key-positions = <29 28>;
    };
  };

  macros {
    Calculator: Calculator {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RG(S) &kp C &kp A &kp L &kp C &kp U &kp L &kp A &kp T &kp O &kp R &kp RET>;
      label = "CALCULATOR";
    };

    Word: Word {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp RG(S) &kp W &kp O &kp R &kp D &kp RET>;
      label = "WORD";
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
&kp TAB         &kp Q  &kp W             &hm UP E    &kp R        &kp T        &kp Y    &kp U       &kp I          &kp O    &kp P          &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &hm LEFT_ARROW S  &hm DOWN D  &hm RIGHT F  &kp G        &kp H    &kp J       &kp K          &kp L    &kp SEMICOLON  &hm RIGHT_SHIFT APOS
&kp LCTRL       &kp Z  &kp X             &kp C       &kp V        &kp B        &kp N    &kp M       &kp COMMA      &kp DOT  &kp FSLH       &hm DEL ESC
                                         &kp LALT    &mo 2        &kp SPACE    &kp RET  &mo_to 1 3  &kp RIGHT_GUI
      >;
    };

    raise {
      bindings = <
&kp F1  &kp F2  &kp F3  &kp F4            &kp F5             &kp F6         &kp F7       &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &kp N1  &kp N2  &kp N3            &kp N4             &kp N5         &kp N6       &kp N7  &kp N8  &kp N9   &kp N0   &trans
&to 4   &trans  &trans  &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))  &kp LG(TAB)    &Calculator  &Word   &trans  &trans   &trans   &trans
                        &trans            &trans             &trans         &trans       &trans  &trans
      >;
    };

    lower {
      bindings = <
&trans               &kp EXCL  &kp AT    &kp HASH       &kp DLLR     &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &kp SLASH
&kp CLCK             &kp END   &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &trans       &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&hm LC(P) LC(LS(P))  &trans    &trans    &kp LC(X)      &kp LG(V)    &trans       &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                                         &trans         &trans       &trans       &trans     &trans     &trans
      >;
    };

    NumPad {
      bindings = <
&kp TAB    &none  &none     &kp UP_ARROW  &trans     &kp LC(LS(W))    &none                  &kp KP_N7        &kp KP_N8        &kp KP_N9  &kp SLASH  &kp BACKSPACE
&mo 4      &none  &kp LEFT  &kp DOWN      &kp RIGHT  &kp LC(W)        &none                  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_N6  &kp MINUS  &none
&kp LC(P)  &none  &none     &none         &none      &kp COMMA        &none                  &kp KP_N1        &kp KP_N2        &kp KP_N3  &kp STAR   &to 0
                            &none         &kp SPACE  &kp RET          &hm ENTER KP_NUMBER_0  &kp PERIOD       &trans
      >;
    };

    Function {
      bindings = <
&trans  &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 3    &kp GREATER_THAN  &kp KP_NUMLOCK        &kp SLASH              &kp ASTERISK  &trans  &trans
&trans  &trans  &trans  &trans  &bt BT_SEL 1  &bt BT_SEL 4    &kp LT            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS      &trans  &trans
&to 0   &trans  &trans  &trans  &bt BT_SEL 2  &bt BT_CLR      &none             &kp COLON             &kp PERCENT            &kp MINUS     &trans  &trans
                        &trans  &trans        &trans          &kp EQUAL         &trans                &trans
      >;
    };
  };
};
